generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI") // ใช้ ENV สำหรับ URI ของ MongoDB
}

model User {
  id       String     @id @default(cuid()) @map("_id") // Maps to MongoDB _id
  name     String
  email    String     @unique
  password String?    // Password can be optional or null
  posts    Post[]     @relation("UserPosts") // One User can have many Posts
  comments Comment[]  @relation("UserComments") // One User can have many Comments
  reports   Report[]  @relation("UserReports") // One User can report many Posts
  replies   Reply[]    @relation("UserReplies") // One User can have many Replies
}

model Post {
  id        String     @id @default(cuid()) @map("_id") // MongoDB _id
  title     String
  content   String
  userId    String     // Field for the user who posted this
  user      User       @relation(fields: [userId], references: [id], name: "UserPosts") // Link to User
  images    String[]   // Support multiple images
  createdAt DateTime   @default(now()) // Post creation date
  updatedAt DateTime   @updatedAt // Last updated date
  comments  Comment[]  @relation("PostComments") // Comments associated with this post
  reports    Report[]   @relation("PostReports") // Reports associated with this post
}

model Comment {
  id        String   @id @default(cuid()) @map("_id") // MongoDB _id
  content   String   // Content of the comment
  postId    String   // ID of the post this comment belongs to
  post      Post     @relation(fields: [postId], references: [id], name: "PostComments") // Link to Post
  userId    String   // ID of the user who made the comment
  user      User     @relation(fields: [userId], references: [id], name: "UserComments") // Link to User
  createdAt DateTime @default(now()) // Creation date of the comment
  images    String[] // Multiple image URLs related to the comment
  replies   Reply[]  @relation("CommentReplies") // Replies associated with this comment
}

model Reply {
  id                  String   @id @default(cuid()) @map("_id") // MongoDB _id
  content             String   // Content of the reply
  originalCommentId   String   // ID of the comment this reply belongs to
  userId             String    // ID of the user who made the reply
  createdAt          DateTime @default(now()) // Creation date of the reply
  images             String[] // Multiple image URLs related to the reply

  comment            Comment  @relation(fields: [originalCommentId], references: [id], name: "CommentReplies") // Link to Comment
  user               User     @relation(fields: [userId], references: [id], name: "UserReplies") // Link to User
}

model Report {
  id        String   @id @default(cuid()) @map("_id") // MongoDB _id
  reason    String   // Reason for the report
  userId    String   // ID of the user who reports
  postId    String   // ID of the post being reported
  createdAt DateTime @default(now()) // Creation date of the report

  user      User     @relation(fields: [userId], references: [id], name: "UserReports") // Link to User
  post      Post     @relation(fields: [postId], references: [id], name: "PostReports") // Link to Post
}